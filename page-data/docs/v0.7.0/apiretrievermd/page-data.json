{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/v0.7.0/apiretrievermd","result":{"data":{"markdownRemark":{"frontmatter":{"id":"apiretrievermd","title":"Retriever"}},"allFile":{"edges":[{"node":{"relativeDirectory":"layout","childLayoutJson":{"layout":{"header":{"quick":"Quick Start","benchmarks":"Benchmarks","why":"Why Haystack","gui":"Admin","tutorials":"Tutorials","solution":"Scenarios","about":"About Haystack","doc":"Docs","blog":"Blog","try":"Try","loading":"Loading...","noresult":"No Result","tutorial":"Tutorial","search":"Search","bootcamp":"Bootcamp"}}}}}]},"openApiSpec":{"version":"1.0","title":"Haystack Hub REST API","description":"Haystack Hub provides a REST API interface to perform neural search on files.\n##  Quickstart\n  1. Register with Haystack Hub. The sign-up process creates an organization and an admin user.\n  2. A new organization is pre-configured with a `default` Workspace having reasonable configurations.\n  3. Generate a Bearer API token using the login credentials of an admin user with the `/api/v1/auth/token` endpoint.\n  4. Upload files using the `/api/v1/workspaces/default/files` endpoint.\n  5. Ask questions using the `/api/v1/workspaces/default/search` endpoint.\n","childrenOpenApiSpecPath":[{"name":"/api/v1/users","verb":"post","summary":"Invite new users to the organization","description":null,"fullPath":"/api/v1/users","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"{\n  \"email\": \"tim.smith@abc.com\",\n  \"workspaces\": [\n    {\n      \"name\": \"default\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"is_super_admin\": true\n}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/users.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/users.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/users","verb":"get","summary":"Get all users in the organization","description":null,"fullPath":"/api/v1/users","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"limit","in":"query","required":null,"schema":{"example":"10","type":"integer"}},{"name":"page_number","in":"query","required":null,"schema":{"example":"1","type":"integer"}}],"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/users.verb.get.response.200","statusCode":"200","description":"Returns a list of all users within the company.","response":"{\n  \"data\": [\n    {\n      \"user_id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n      \"email\": \"tim.smith@abc.com\",\n      \"first_name\": \"Tim\",\n      \"last_name\": \"Smith\",\n      \"is_super_admin\": true,\n      \"workspaces\": [\n        {\n          \"name\": \"default\",\n          \"role\": \"developer\"\n        }\n      ]\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/users.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/users/{user_id}","verb":"get","summary":"Get details of an user","description":null,"fullPath":"/api/v1/users/{user_id}","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"example":"141dbaad-3156-4885-a34e-888667f9f6d9","type":"string"}}],"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/users/{user_id}.verb.get.response.200","statusCode":"200","description":"Returns details of the user which has the given id","response":"{\n  \"user_id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n  \"email\": \"tim.smith@abc.com\",\n  \"first_name\": \"Tim\",\n  \"last_name\": \"Smith\",\n  \"is_super_admin\": true,\n  \"workspaces\": [\n    {\n      \"name\": \"default\",\n      \"role\": \"developer\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/users/{user_id}.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/users/{user_id}","verb":"put","summary":"Edit details of an user","description":null,"fullPath":"/api/v1/users/{user_id}","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"example":"141dbaad-3156-4885-a34e-888667f9f6d9","type":"string"}}],"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/users/{user_id}.verb.put.response.200","statusCode":"200","description":"Return the updated user details of the given user","response":"{\n  \"user_id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n  \"email\": \"tim.smith@abc.com\",\n  \"first_name\": \"Tim\",\n  \"last_name\": \"Smith\",\n  \"is_super_admin\": true,\n  \"workspaces\": [\n    {\n      \"name\": \"default\",\n      \"role\": \"developer\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/users/{user_id}.verb.put.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/me","verb":"get","summary":"Get details of current user","description":null,"fullPath":"/api/v1/me","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/me.verb.get.response.200","statusCode":"200","description":"Returns the details of the logged in user","response":"{\n  \"user_id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n  \"email\": \"tim.smith@abc.com\",\n  \"first_name\": \"Tim\",\n  \"last_name\": \"Smith\",\n  \"is_super_admin\": true,\n  \"workspaces\": [\n    {\n      \"name\": \"default\",\n      \"role\": \"developer\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/me.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/retrievers","verb":"get","summary":"Get retriever of workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/retrievers","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Configuration","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/retrievers.verb.get.response.200","statusCode":"200","description":"Returns the available retrievers of the workspace","response":"{\n  \"data\": [\n    {\n      \"retriever\": {\n        \"type\": \"DensePassageRetriever\",\n        \"description\": \"Dense Passage Retrieval\",\n        \"is_recommended\": true,\n        \"models\": [\n          {\n            \"name\": \"deepset/roberta-base-squad2\",\n            \"description\": \"RoBERTa model trained on SQuAD\",\n            \"is_recommended\": true\n          }\n        ]\n      }\n    }\n  ]\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/readers","verb":"get","summary":"Get readers of workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/readers","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Configuration","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/readers.verb.get.response.200","statusCode":"200","description":"Returns the available readers of the workspace","response":"{\n  \"data\": [\n    {\n      \"type\": \"FARMReader\",\n      \"description\": \"FARM Reader\",\n      \"is_recommended\": true,\n      \"models\": [\n        {\n          \"name\": \"deepset/roberta-base-squad2\",\n          \"description\": \"RoBERTa model trained on SQuAD\",\n          \"is_recommended\": true\n        }\n      ]\n    }\n  ]\n}"}]},{"name":"/api/v1/workspaces","verb":"get","summary":"List all Workspaces","description":null,"fullPath":"/api/v1/workspaces","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":null,"tag":"Workspace","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces.verb.get.response.200","statusCode":"200","description":"Returns all workspaces of the organization","response":"{\n  \"data\": [\n    {\n      \"name\": \"dafault\",\n      \"role\": \"developer\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/search_history","verb":"get","summary":"Get history of search queries","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/search_history","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Dashboard","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/search_history.verb.get.response.200","statusCode":"200","description":"Returns the search history of the workspace","response":"{\n  \"data\": [\n    {\n      \"request\": {\n        \"questions\": [\n          \"Who is Arya's sister?\"\n        ],\n        \"filters\": null,\n        \"top_k_reader\": 5,\n        \"top_k_retriever\": 5\n      }\n    },\n    {\n      \"response\": {\n        \"question\": \"Who is Arya's sister?\",\n        \"answer\": \"Sansa\",\n        \"context\": \"\\n====Season 1====\\nArya accompanies her father Ned and her sister Sansa to King's Landing. Before their departure, Arya's half-brother Jon Snow gifts Arya a sword which she dubs \\\"Needle\\\". On the Kingsroad, Arya is sparring with a butcher's boy, Mycah, when Sansa's betrothed Prince Joffrey Baratheon attacks Mycah, prompting Arya's direwolf Nymeria to bite Joffrey. Arya shoos Nymeria away so she is not killed, but is furious when Sansa later refuses to support her version of events. Mycah is later \",\n        \"file\": {\n          \"id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n          \"name\": \"berlin.pdf\"\n        },\n        \"offset_end\": 71,\n        \"offset_end_in_doc\": 71,\n        \"offset_start\": 65,\n        \"offset_start_in_doc\": 65,\n        \"probability\": 0.8372742768459336,\n        \"score\": 13.104684829711914\n      }\n    },\n    {\n      \"user\": {\n        \"id\": \"7da504ef-d825-4e89-b479-cac538c9df7b\",\n        \"name\": \"Tim Smith\"\n      },\n      \"duration\": 2342,\n      \"time\": \"2018-12-19\"\n    }\n  ],\n  \"has_more\": true\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/search_history.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/search_count","verb":"get","summary":"Get day-wise count of search queries for the last month","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/search_count","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Dashboard","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/search_count.verb.get.response.200","statusCode":"200","description":"Returns the search queries per day of the last month","response":"{\n  \"data\": [\n    {\n      \"date\": \"2018-12-19\",\n      \"count\": 73\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/search_count.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/stats","verb":"get","summary":"Get workspace query statistics","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/stats","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Dashboard","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/stats.verb.get.response.200","statusCode":"200","description":"Returns workspace query statistics","response":"{\n  \"file_count\": 245,\n  \"document_count\": 2310,\n  \"average_response_time\": 1.12\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/stats.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}","verb":"get","summary":"Get a workspace by name","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Workspace","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}.verb.get.response.200","statusCode":"200","description":"Returns the workspace defined by the given name","response":"{\n  \"name\": \"dafault\",\n  \"role\": \"developer\"\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/config","verb":"get","summary":"Get the configuration of a Workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/config","exampleDef":"{\n  \"email\": {\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The email of the user who was invited\"\n  },\n  \"workspaces\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"default\",\n          \"description\": \"The user will be added to the named workspace\"\n        },\n        \"role\": {\n          \"type\": \"string\",\n          \"description\": \"The user can have the role \\\"user\\\" or \\\"developer\\\" within the workspace\",\n          \"example\": \"developer\"\n        }\n      }\n    }\n  },\n  \"is_super_admin\": {\n    \"type\": \"boolean\",\n    \"example\": true,\n    \"description\": \"The user is a super_admin within the organisation (true/false)\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Configuration","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/config.verb.get.response.200","statusCode":"200","description":"Returns the workspace configuration which is defined by the workspace_name","response":"{\n  \"reader\": {\n    \"type\": \"FARMReader\",\n    \"model\": {\n      \"name\": \"deepset/roberta-base-squad2\",\n      \"amp\": false\n    },\n    \"top_k\": 10,\n    \"no_ans_boost\": -10,\n    \"context_window_size\": 500,\n    \"doc_stride\": 128,\n    \"max_seq_len\": 256\n  },\n  \"retriever\": {\n    \"model\": {\n      \"name\": \"deepset/roberta-base-squad2\"\n    },\n    \"top_k\": 10,\n    \"type\": \"DensePassageRetrieval\"\n  },\n  \"file\": {\n    \"remove_numeric_tables\": false,\n    \"remove_whitespace\": false,\n    \"remove_empty_lines\": false,\n    \"remove_header_footer\": false\n  }\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/config.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/config","verb":"patch","summary":"Change the configuration of a Workspace","description":"Configure the settings for a Workspace.\nThis endpoints allows to update configs for the reader, retriever, and files. Only the config values supplied in the request body are updated.\n","fullPath":"/api/v1/workspaces/{workspace_name}/config","exampleDef":"{\n  \"reader\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"type\": {\n        \"type\": \"string\",\n        \"example\": \"FARMReader\",\n        \"description\": \"Reader finding answers\"\n      },\n      \"model\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"deepset/roberta-base-squad2\",\n            \"description\": \"Pretrained QA model\"\n          },\n          \"amp\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          }\n        }\n      },\n      \"top_k\": {\n        \"example\": 10,\n        \"type\": \"integer\",\n        \"description\": \"The maximum number of answers to return for each question\"\n      },\n      \"no_ans_boost\": {\n        \"example\": -10,\n        \"description\": \"How much the noanswer logit is boosted/increased\"\n      },\n      \"context_window_size\": {\n        \"example\": 500,\n        \"description\": \"Num of chars (before and after the answer) to return as \\\"context\\\" for each answer\"\n      },\n      \"doc_stride\": {\n        \"example\": 128,\n        \"description\": \"Length of striding window for splitting long texts (used if len(text) > maxseqlen)\"\n      },\n      \"max_seq_len\": {\n        \"example\": 256,\n        \"description\": \"Max sequence length of one input text for the model\"\n      }\n    },\n    \"required\": [\n      \"model_name\",\n      \"top_k\",\n      \"no_ans_boost\",\n      \"context_window_size\",\n      \"doc_stride\",\n      \"max_seq_len\"\n    ]\n  },\n  \"retriever\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"model\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"deepset/roberta-base-squad2\",\n            \"description\": \"Passes a set of candidate documents to the Reader\"\n          }\n        }\n      },\n      \"top_k\": {\n        \"example\": 10,\n        \"type\": \"integer\",\n        \"description\": \"How many documents to return per query\"\n      },\n      \"type\": {\n        \"example\": \"DensePassageRetrieval\",\n        \"type\": \"string\",\n        \"description\": \"Haystack Hub supports ElasticsearchRetriever and EmbeddingRetriever\"\n      }\n    },\n    \"required\": [\n      \"top_k\",\n      \"type\"\n    ]\n  },\n  \"file\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"remove_numeric_tables\": {\n        \"type\": \"boolean\",\n        \"example\": false,\n        \"description\": \"Remove tables in documents (true/false)\"\n      },\n      \"remove_whitespace\": {\n        \"type\": \"boolean\",\n        \"example\": false,\n        \"description\": \"Remove whitespaces in documents (true/false)\"\n      },\n      \"remove_empty_lines\": {\n        \"type\": \"boolean\",\n        \"example\": false,\n        \"description\": \"Remove empty lines in documents (true/false)\"\n      },\n      \"remove_header_footer\": {\n        \"type\": \"boolean\",\n        \"example\": false,\n        \"description\": \"Remove header and footer and docuemtns (true/false)\"\n      },\n      \"metadata_fields\": {\n        \"type\": \"object\",\n        \"$ref\": \"#/components/schemas/Meta\"\n      }\n    },\n    \"required\": [\n      \"remove_numeric_tables\",\n      \"remove_whitespace\",\n      \"remove_empty_lines\",\n      \"remove_header_footer\"\n    ]\n  }\n}","example":"{\n  \"reader\": {\n    \"type\": \"FARMReader\",\n    \"model\": {\n      \"name\": \"deepset/roberta-base-squad2\",\n      \"amp\": false\n    },\n    \"top_k\": 10,\n    \"no_ans_boost\": -10,\n    \"context_window_size\": 500,\n    \"doc_stride\": 128,\n    \"max_seq_len\": 256\n  },\n  \"retriever\": {\n    \"model\": {\n      \"name\": \"deepset/roberta-base-squad2\"\n    },\n    \"top_k\": 10,\n    \"type\": \"DensePassageRetrieval\"\n  },\n  \"file\": {\n    \"remove_numeric_tables\": false,\n    \"remove_whitespace\": false,\n    \"remove_empty_lines\": false,\n    \"remove_header_footer\": false\n  }\n}","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Configuration","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/config.verb.patch.response.200","statusCode":"200","description":"Returns the update configuration of a workspace","response":"{\n  \"reader\": {\n    \"type\": \"FARMReader\",\n    \"model\": {\n      \"name\": \"deepset/roberta-base-squad2\",\n      \"amp\": false\n    },\n    \"top_k\": 10,\n    \"no_ans_boost\": -10,\n    \"context_window_size\": 500,\n    \"doc_stride\": 128,\n    \"max_seq_len\": 256\n  },\n  \"retriever\": {\n    \"model\": {\n      \"name\": \"deepset/roberta-base-squad2\"\n    },\n    \"top_k\": 10,\n    \"type\": \"DensePassageRetrieval\"\n  },\n  \"file\": {\n    \"remove_numeric_tables\": false,\n    \"remove_whitespace\": false,\n    \"remove_empty_lines\": false,\n    \"remove_header_footer\": false\n  }\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/config.verb.patch.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files","verb":"post","summary":"Upload files to workspace","description":"This endpoint accepts raw files(pdf/txt) and plain-text strings. For more details, refer to the `file` parameter in the request body.","fullPath":"/api/v1/workspaces/{workspace_name}/files","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"{\n  \"file\": \"Berlin.pdf\",\n  \"file_name\": \"Berlin.pdf\",\n  \"meta\": \"{}\",\n  \"split_by\": \"word\",\n  \"split_length\": 500,\n  \"split_respect_sentence_boundary\": false,\n  \"remove_empty_lines\": false,\n  \"remove_header_footer\": false,\n  \"remove_numeric_tables\": false,\n  \"remove_whitespace\": false\n}","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files","verb":"get","summary":"List files in Workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/files","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}},{"name":"limit","in":"query","required":null,"schema":{"example":"10","type":"integer"}},{"name":"page_number","in":"query","required":null,"schema":{"example":"1","type":"integer"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files.verb.get.response.200","statusCode":"200","description":"Returns all files within the workspace","response":"{\n  \"data\": [\n    {\n      \"id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n      \"url\": \"http://link-to-download-file\",\n      \"name\": \"Berlin.pdf\",\n      \"size\": 16,\n      \"characters\": 2050,\n      \"languages\": [\n        \"en\"\n      ]\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/file-preview","verb":"post","summary":"Preview file before upload","description":"Generate preview of how a file is split in documents.","fullPath":"/api/v1/workspaces/{workspace_name}/file-preview","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"{\n  \"file\": \"Berlin.pdf\",\n  \"file_name\": \"Berlin.pdf\",\n  \"meta\": \"{}\",\n  \"split_by\": \"word\",\n  \"split_length\": 500,\n  \"split_respect_sentence_boundary\": false,\n  \"remove_empty_lines\": false,\n  \"remove_header_footer\": false,\n  \"remove_numeric_tables\": false,\n  \"remove_whitespace\": false\n}","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/file-preview.verb.post.response.200","statusCode":"200","description":"Successful Response","response":"{\n  \"data\": [\n    {\n      \"text\": \"Sample document text\",\n      \"meta\": {\n        \"_split_id\": 0\n      }\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/file-preview.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files/{file_id}","verb":"get","summary":"Download file from Workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/files/{file_id}","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}},{"name":"file_id","in":"path","required":true,"schema":{"example":"d594d351-1661-4cf2-b542-4e0e4f1ffe4b","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}.verb.get.response.200","statusCode":"200","description":"Downloads the file workspace_name","response":""},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files/{file_id}","verb":"delete","summary":"Delete file from Workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/files/{file_id}","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}},{"name":"file_id","in":"path","required":true,"schema":{"example":"d594d351-1661-4cf2-b542-4e0e4f1ffe4b","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}.verb.delete.response.200","statusCode":"200","description":"File was deleted successfully","response":""},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}.verb.delete.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files/{file_id}/documents","verb":"get","summary":"Get documents for a file","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/files/{file_id}/documents","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}},{"name":"file_id","in":"path","required":true,"schema":{"example":"d594d351-1661-4cf2-b542-4e0e4f1ffe4b","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}/documents.verb.get.response.200","statusCode":"200","description":"Returns all documents for the file with the File ID file_id","response":"{\n  \"data\": [\n    {\n      \"text\": \"Sample document text\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}/documents.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files/{file_id}/meta","verb":"get","summary":"Get metadata for a file","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/files/{file_id}/meta","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}},{"name":"file_id","in":"path","required":true,"schema":{"example":"d594d351-1661-4cf2-b542-4e0e4f1ffe4b","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}/meta.verb.get.response.200","statusCode":"200","description":"Returns all meta data for the file with the File ID file_id","response":"{\n  \"author\": \"Tim Smith\",\n  \"year\": \"2020\"\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}/meta.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/files/{file_id}/meta","verb":"put","summary":"Update metadata for a file","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/files/{file_id}/meta","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}},{"name":"file_id","in":"path","required":true,"schema":{"example":"d594d351-1661-4cf2-b542-4e0e4f1ffe4b","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}/meta.verb.put.response.200","statusCode":"200","description":"Returns the updated meta data for the file with the ID file_id","response":"{\n  \"author\": \"Tim Smith\",\n  \"year\": \"2020\"\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/files/{file_id}/meta.verb.put.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/metadata_fields","verb":"get","summary":"Get meta data fields for a Workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/metadata_fields","exampleDef":"{\n  \"file\": {\n    \"format\": \"binary\",\n    \"title\": \"File\",\n    \"type\": \"string\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"A file in pdf or txt format. Optionally, if working with custom text extraction from an external source like HTML or database, a plain-text string can also be passed here in the file parameter. In such cases, the `file_name` parameter can be used to set a custom name for the uploaded string.\"\n  },\n  \"file_name\": {\n    \"format\": \"string\",\n    \"title\": \"File Name\",\n    \"example\": \"Berlin.pdf\",\n    \"description\": \"Override the name of uploaded file or set the file name in case a string is uploaded.\"\n  },\n  \"meta\": {\n    \"format\": \"string\",\n    \"title\": \"Metadata JSON string\",\n    \"example\": \"{}\",\n    \"description\": \"Serialized JSON string of key/value(both of type string) pairs that can later be used for filtering in search.\"\n  },\n  \"split_by\": {\n    \"format\": \"string\",\n    \"example\": \"word\",\n    \"description\": \"'word', 'sentence', or 'passage'\"\n  },\n  \"split_length\": {\n    \"format\": \"integer\",\n    \"example\": 500,\n    \"description\": \"Maximum number of the above split unit (e.g. word) that are allowed in one document\"\n  },\n  \"split_respect_sentence_boundary\": {\n    \"format\": \"boolean\",\n    \"example\": false,\n    \"description\": \"only valid when split_by is set to 'word'\"\n  },\n  \"remove_empty_lines\": {\n    \"title\": \"Remove Empty Lines\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Remove multiple blank lines when processing files.\"\n  },\n  \"remove_header_footer\": {\n    \"title\": \"Remove Header Footer\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove repeating header/footer string in files.\"\n  },\n  \"remove_numeric_tables\": {\n    \"title\": \"Remove Numeric Tables\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Use heuristics to remove numeric tabular data from the files.\"\n  },\n  \"remove_whitespace\": {\n    \"title\": \"Remove Whitespace\",\n    \"type\": \"boolean\",\n    \"example\": false,\n    \"description\": \"Strip any additional whitespaces in the files.\"\n  },\n  \"valid_languages\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"title\": \"Valid Languages\",\n    \"example\": [\n      \"en\"\n    ],\n    \"type\": \"array\",\n    \"description\": \"Validate language of the files to be one from the configured language for the Workspace.\"\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/metadata_fields.verb.get.response.200","statusCode":"200","description":"Returns all meta data field of the workspace","response":"{\n  \"data\": [\n    {\n      \"name\": \"Author\",\n      \"type\": \"string\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/metadata_fields.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/metadata_fields","verb":"put","summary":"Update the meta data fields for a Workspace","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/metadata_fields","exampleDef":"{\n  \"data\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"$ref\": \"#/components/schemas/MetaField\"\n    }\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/metadata_fields.verb.put.response.200","statusCode":"200","description":"Returns the updated meta fields of the workspace","response":"{\n  \"data\": [\n    {\n      \"name\": \"Author\",\n      \"type\": \"string\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/metadata_fields.verb.put.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/languages","verb":"get","summary":"List files with indexing errors","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/languages","exampleDef":"{\n  \"data\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"$ref\": \"#/components/schemas/MetaField\"\n    }\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/languages.verb.get.response.200","statusCode":"200","description":"Returns all available languages for the workspace","response":"{\n  \"properties\": {\n    \"languages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/components/schemas/Language\"\n      }\n    }\n  }\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/languages.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/invalid_files","verb":"get","summary":"List files with indexing errors","description":null,"fullPath":"/api/v1/workspaces/{workspace_name}/invalid_files","exampleDef":"{\n  \"data\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"$ref\": \"#/components/schemas/MetaField\"\n    }\n  }\n}","example":"","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Files","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/invalid_files.verb.get.response.200","statusCode":"200","description":"Returns all files with an indexing error","response":"{\n  \"data\": [\n    {\n      \"id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n      \"url\": \"http://link-to-download-file\",\n      \"name\": \"Berlin.pdf\",\n      \"size\": 16,\n      \"characters\": 2050,\n      \"languages\": [\n        \"en\"\n      ],\n      \"reason\": \"Invalid Language\"\n    }\n  ]\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/invalid_files.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/workspaces/{workspace_name}/search","verb":"post","summary":"Search answers in Workspace","description":"Search for answers to a list of questions with optional `filters` on files. An endpoint to manage filters is not available at present, reach out to the support for setting up filters.\n","fullPath":"/api/v1/workspaces/{workspace_name}/search","exampleDef":"{\n  \"questions\": {\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"type\": \"array\",\n    \"example\": [\n      \"Who is Arya's sister?\"\n    ],\n    \"description\": \"List of questions\"\n  }\n}","example":"{\n  \"questions\": [\n    \"Who is Arya's sister?\"\n  ]\n}","parameters":[{"name":"workspace_name","in":"path","required":true,"schema":{"example":"default","type":"string"}}],"tag":"Search","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/search.verb.post.response.200","statusCode":"200","description":"Returns all results which match the given search","response":"{\n  \"properties\": {\n    \"results\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/AnswersToIndividualQuestion\"\n      },\n      \"title\": \"Results\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"results\"\n  ],\n  \"title\": \"Answers\",\n  \"type\": \"object\"\n}"},{"id":"openapi.spec.openapispec.path./api/v1/workspaces/{workspace_name}/search.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/signup","verb":"post","summary":"Sign up as a new organization","description":"Setup an organization with the new user as an admin. An email confirmation is required before you can access the account.","fullPath":"/api/v1/signup","exampleDef":"{\n  \"email\": {\n    \"title\": \"Email\",\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The user's email address\"\n  },\n  \"first_name\": {\n    \"title\": \"First Name\",\n    \"type\": \"string\",\n    \"example\": \"Tim\",\n    \"description\": \"First name\"\n  },\n  \"last_name\": {\n    \"title\": \"Last Name\",\n    \"type\": \"string\",\n    \"example\": \"Smith\",\n    \"description\": \"Last name\"\n  },\n  \"organization_name\": {\n    \"title\": \"Organization Name\",\n    \"type\": \"string\",\n    \"example\": \"Your GmbH\",\n    \"description\": \"The organization the user is working for\"\n  },\n  \"password\": {\n    \"title\": \"Password\",\n    \"type\": \"string\",\n    \"example\": \"s€cur€_p9SS!\",\n    \"description\": \"Password defined by the user\"\n  }\n}","example":"{\n  \"email\": \"tim.smith@abc.com\",\n  \"first_name\": \"Tim\",\n  \"last_name\": \"Smith\",\n  \"organization_name\": \"Your GmbH\",\n  \"password\": \"s€cur€_p9SS!\"\n}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/signup.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/signup.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/change_password","verb":"post","summary":"Change password","description":"Change password for a logged-in user.","fullPath":"/api/v1/change_password","exampleDef":"{\n  \"old_password\": {\n    \"type\": \"string\",\n    \"example\": \"old_pa$$\",\n    \"description\": \"Old password\"\n  },\n  \"new_password\": {\n    \"type\": \"string\",\n    \"example\": \"new_pa$$\",\n    \"description\": \"New password\"\n  }\n}","example":"{\n  \"old_password\": \"old_pa$$\",\n  \"new_password\": \"new_pa$$\"\n}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/change_password.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/change_password.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/forgot_password","verb":"post","summary":"Forgot the login password","description":"Send an email to the user for password recovery.","fullPath":"/api/v1/forgot_password","exampleDef":"{\n  \"email\": {\n    \"title\": \"Email\",\n    \"type\": \"string\",\n    \"example\": \"tim.smith@abc.com\",\n    \"description\": \"The user's email address\"\n  }\n}","example":"{\n  \"email\": \"tim.smith@abc.com\"\n}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/forgot_password.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/forgot_password.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/reset_password","verb":"post","summary":"Reset the login password","description":"Reset the password based on the password recovery email recieved by user.","fullPath":"/api/v1/reset_password","exampleDef":"{\n  \"new_password\": {\n    \"type\": \"string\",\n    \"example\": \"pswd\",\n    \"description\": \"New password\"\n  },\n  \"reset_id\": {\n    \"type\": \"string\",\n    \"example\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n    \"description\": \"Unique password reset id\"\n  },\n  \"reset_key\": {\n    \"type\": \"string\",\n    \"example\": \"kjh4jadKdenF23\",\n    \"description\": \"Password reset key\"\n  }\n}","example":"{\n  \"new_password\": \"s€cur€_p9SS!2.0\",\n  \"reset_id\": \"d594d351-1661-4cf2-b542-4e0e4f1ffe4b\",\n  \"reset_key\": \"kjh4jadKdenF23\"\n}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/reset_password.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/reset_password.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/verify_email","verb":"post","summary":"Reset the login password","description":"Reset the password based on the password recovery email recieved by user.","fullPath":"/api/v1/verify_email","exampleDef":"{\n  \"verification_key\": {\n    \"type\": \"string\",\n    \"example\": \"lKJfdkkj839jh5\",\n    \"description\": \"Uniquev key to verify the request\"\n  }\n}","example":"{\n  \"verification_key\": \"lKJfdkkj839jh5\"\n}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/verify_email.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/verify_email.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/auth/token","verb":"post","summary":"Create a new API token","description":null,"fullPath":"/api/v1/auth/token","exampleDef":"{\n  \"username\": {\n    \"title\": \"Username\",\n    \"type\": \"string\",\n    \"description\": \"Email address of the user\",\n    \"example\": \"tim.smith@abc.com\"\n  },\n  \"password\": {\n    \"title\": \"Password\",\n    \"example\": \"User Password\",\n    \"description\": \"Login password\",\n    \"type\": \"string\",\n    \"format\": \"password\"\n  },\n  \"expire_in\": {\n    \"title\": \"expire_in\",\n    \"example\": 3600,\n    \"description\": \"(Optional) Expiry time of token in seconds\"\n  }\n}","example":"{\n  \"username\": \"tim.smith@abc.com\",\n  \"password\": \"User Password\",\n  \"expire_in\": 3600\n}","parameters":null,"tag":"Auth","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/auth/token.verb.post.response.200","statusCode":"200","description":"Successful Response","response":"{\n  \"access_token\": \"aaa.bbb.ccc\"\n}"},{"id":"openapi.spec.openapispec.path./api/v1/auth/token.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/auth/blacklist","verb":"post","summary":"Blacklist an existing API token","description":null,"fullPath":"/api/v1/auth/blacklist","exampleDef":"{\n  \"access_token\": {\n    \"description\": \"Bearer token to blacklist\",\n    \"example\": \"aaa.bbb.ccc\",\n    \"title\": \"access_token\",\n    \"type\": \"string\"\n  },\n  \"example\": {\n    \"access_token\": \"aaa.bbb.ccc\"\n  }\n}","example":"","parameters":null,"tag":"Auth","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/auth/blacklist.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/auth/blacklist.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/organization","verb":"get","summary":"Get details of the user's organization","description":null,"fullPath":"/api/v1/organization","exampleDef":"{\n  \"access_token\": {\n    \"description\": \"Bearer token to blacklist\",\n    \"example\": \"aaa.bbb.ccc\",\n    \"title\": \"access_token\",\n    \"type\": \"string\"\n  },\n  \"example\": {\n    \"access_token\": \"aaa.bbb.ccc\"\n  }\n}","example":"","parameters":null,"tag":"Organization","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/organization.verb.get.response.200","statusCode":"200","description":"Returns the details of the user's organization","response":"{\n  \"name\": \"deepset\"\n}"},{"id":"openapi.spec.openapispec.path./api/v1/organization.verb.get.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/auth/request_subscription","verb":"post","summary":"Request a new subscription plan (starter, basic, premium or enterprise)","description":null,"fullPath":"/api/v1/auth/request_subscription","exampleDef":"{\n  \"pricing_plan\": {\n    \"type\": \"string\",\n    \"example\": \"starter\",\n    \"description\": \"subscription level (starter, basic, premium or enterprise)\"\n  }\n}","example":"{\n  \"pricing_plan\": \"starter\"\n}","parameters":null,"tag":"Organization","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/auth/request_subscription.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/auth/request_subscription.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]},{"name":"/api/v1/auth/resend_verify_email","verb":"post","summary":"Resend the verification email for your account","description":null,"fullPath":"/api/v1/auth/resend_verify_email","exampleDef":"{}","example":"{}","parameters":null,"tag":"User","childrenOpenApiSpecResponse":[{"id":"openapi.spec.openapispec.path./api/v1/auth/resend_verify_email.verb.post.response.200","statusCode":"200","description":"Successful Response","response":""},{"id":"openapi.spec.openapispec.path./api/v1/auth/resend_verify_email.verb.post.response.422","statusCode":"422","description":"Validation Error","response":"{\n  \"properties\": {\n    \"detail\": {\n      \"items\": {\n        \"$ref\": \"#/components/schemas/ValidationError\"\n      },\n      \"title\": \"Detail\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"HTTPValidationError\",\n  \"type\": \"object\"\n}"}]}]}},"pageContext":{"locale":"en","version":"v0.7.0","versions":["latest","v0.4.0","v0.5.0","v0.6.0","v0.7.0"],"old":"apiretrievermd","headings":[{"value":"Retriever","depth":1},{"value":"Module: base","depth":1},{"value":"Class: BaseRetriever","depth":2},{"value":"retrieve","depth":4},{"value":"timing","depth":4},{"value":"eval","depth":4},{"value":"Module: sparse","depth":1},{"value":"Class: ElasticsearchRetriever","depth":2},{"value":"__init__","depth":4},{"value":"retrieve","depth":4},{"value":"Class: ElasticsearchFilterOnlyRetriever","depth":2},{"value":"retrieve","depth":4},{"value":"Class: TfidfRetriever","depth":2},{"value":"retrieve","depth":4},{"value":"fit","depth":4},{"value":"Module: dense","depth":1},{"value":"Class: DensePassageRetriever","depth":2},{"value":"__init__","depth":4},{"value":"retrieve","depth":4},{"value":"embed_queries","depth":4},{"value":"embed_passages","depth":4},{"value":"train","depth":4},{"value":"save","depth":4},{"value":"load","depth":4},{"value":"Class: EmbeddingRetriever","depth":2},{"value":"__init__","depth":4},{"value":"retrieve","depth":4},{"value":"embed","depth":4},{"value":"embed_queries","depth":4},{"value":"embed_passages","depth":4}],"fileAbsolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/v0.7.0/site/en/api/api/retriever.md","newestVersion":"v0.0.0","editPath":"api/api/retriever.md","allMenus":[{"lang":"en","version":"master","menuList":[{"id":"overview","title":"Overview","label1":"","label2":"","label3":"","order":0,"isMenu":true},{"id":"get_startedmd","title":"Get Started","label1":"overview","label2":"","label3":"","order":0,"isMenu":null},{"id":"intromd","title":"What is Haystack?","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"use_casesmd","title":"Use Cases","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"roadmapmd","title":"Roadmap","label1":"overview","label2":"","label3":"","order":2,"isMenu":null},{"id":"termsmd","title":"Glossary","label1":"overview","label2":"","label3":"","order":3,"isMenu":null},{"id":"usage_haystack","title":"Usage","label1":"","label2":"","label3":"","order":1,"isMenu":true},{"id":"preprocessingmd","title":"Preprocessing","label1":"usage_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"documentstoremd","title":"Document Store","label1":"usage_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"retrievermd","title":"Retriever","label1":"usage_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"readermd","title":"Reader","label1":"usage_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"generatormd","title":"Generator","label1":"usage_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"pipelinesmd","title":"Pipelines","label1":"usage_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"languagesmd","title":"Languages Other Than English","label1":"usage_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"domain_adaptationmd","title":"Domain Adaptation","label1":"usage_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"optimizationmd","title":"Optimization","label1":"usage_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"annotationmd","title":"Annotation Tool","label1":"usage_haystack","label2":"","label3":"","order":9,"isMenu":null},{"id":"tutorials_haystack","title":"Tutorials","label1":"","label2":"","label3":"","order":2,"isMenu":true},{"id":"tutorial1md","title":"Build Your First QA System","label1":"tutorials_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"tutorial2md","title":"Fine-tuning a Model on Your Own Data","label1":"tutorials_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"tutorial3md","title":"Build a QA System Without Elasticsearch","label1":"tutorials_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"tutorial4md","title":"Utilizing existing FAQs for Question Answering","label1":"tutorials_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"tutorial5md","title":"Evaluation of a QA System","label1":"tutorials_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"tutorial6md","title":"Better Retrieval via \"Dense Passage Retrieval\"","label1":"tutorials_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"tutorial7md","title":"Generative QA with \"Retrieval-Augmented Generation\"","label1":"tutorials_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"tutorial8md","title":"Preprocessing your Documents","label1":"tutorials_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"tutorial9md","title":"How to Train DPR","label1":"tutorials_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"api_haystack","title":"API reference","label1":"","label2":"","label3":"","order":3,"isMenu":true},{"id":"apidatabasemd","title":"Document Store","label1":"api_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"apiretrievermd","title":"Retriever","label1":"api_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"apireadermd","title":"Reader","label1":"api_haystack","label2":"api_haystack","label3":"","order":2,"isMenu":null},{"id":"apigeneratormd","title":"Generator","label1":"api_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"apiindexingmd","title":"Preprocessor","label1":"api_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"file_convertersmd","title":"File Converters","label1":"api_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"apipipelinesmd","title":"Pipelines","label1":"api_haystack","label2":"","label3":"","order":6,"isMenu":null}],"absolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/site/en/menuStructure/menu.json"},{"lang":"en","version":"latest","menuList":[{"id":"overview","title":"Overview","label1":"","label2":"","label3":"","order":0,"isMenu":true},{"id":"get_startedmd","title":"Get Started","label1":"overview","label2":"","label3":"","order":0,"isMenu":null},{"id":"intromd","title":"What is Haystack?","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"use_casesmd","title":"Use Cases","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"roadmapmd","title":"Roadmap","label1":"overview","label2":"","label3":"","order":2,"isMenu":null},{"id":"termsmd","title":"Glossary","label1":"overview","label2":"","label3":"","order":3,"isMenu":null},{"id":"usage_haystack","title":"Usage","label1":"","label2":"","label3":"","order":1,"isMenu":true},{"id":"preprocessingmd","title":"Preprocessing","label1":"usage_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"documentstoremd","title":"Document Store","label1":"usage_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"retrievermd","title":"Retriever","label1":"usage_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"readermd","title":"Reader","label1":"usage_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"generatormd","title":"Generator","label1":"usage_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"pipelinesmd","title":"Pipelines","label1":"usage_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"languagesmd","title":"Languages Other Than English","label1":"usage_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"domain_adaptationmd","title":"Domain Adaptation","label1":"usage_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"optimizationmd","title":"Optimization","label1":"usage_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"annotationmd","title":"Annotation Tool","label1":"usage_haystack","label2":"","label3":"","order":9,"isMenu":null},{"id":"tutorials_haystack","title":"Tutorials","label1":"","label2":"","label3":"","order":2,"isMenu":true},{"id":"tutorial1md","title":"Build Your First QA System","label1":"tutorials_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"tutorial2md","title":"Fine-tuning a Model on Your Own Data","label1":"tutorials_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"tutorial3md","title":"Build a QA System Without Elasticsearch","label1":"tutorials_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"tutorial4md","title":"Utilizing existing FAQs for Question Answering","label1":"tutorials_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"tutorial5md","title":"Evaluation of a QA System","label1":"tutorials_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"tutorial6md","title":"Better Retrieval via \"Dense Passage Retrieval\"","label1":"tutorials_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"tutorial7md","title":"Generative QA with \"Retrieval-Augmented Generation\"","label1":"tutorials_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"tutorial8md","title":"Preprocessing your Documents","label1":"tutorials_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"tutorial9md","title":"How to Train DPR","label1":"tutorials_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"api_haystack","title":"API reference","label1":"","label2":"","label3":"","order":3,"isMenu":true},{"id":"apidatabasemd","title":"Document Store","label1":"api_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"apiretrievermd","title":"Retriever","label1":"api_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"apireadermd","title":"Reader","label1":"api_haystack","label2":"api_haystack","label3":"","order":2,"isMenu":null},{"id":"apigeneratormd","title":"Generator","label1":"api_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"apiindexingmd","title":"Preprocessor","label1":"api_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"file_convertersmd","title":"File Converters","label1":"api_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"apipipelinesmd","title":"Pipelines","label1":"api_haystack","label2":"","label3":"","order":6,"isMenu":null}],"absolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/latest/site/en/menuStructure/menu.json"},{"lang":"en","version":"v0.4.0","menuList":[{"id":"usage_haystack","title":"Usage","label1":"","label2":"","label3":"","order":0,"isMenu":true},{"id":"intromd","title":"What is Haystack","label1":"usage_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"get_startedmd","title":"Get Started","label1":"usage_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"databasemd","title":"Document Store","label1":"usage_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"retrievermd","title":"Retriever","label1":"usage_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"readermd","title":"Reader","label1":"usage_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"domain_adaptationmd","title":"Domain Adaptation","label1":"usage_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"termsmd","title":"Glossary","label1":"usage_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"roadmapmd","title":"Roadmap","label1":"usage_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"tutorials_haystack","title":"Tutorials","label1":"","label2":"","label3":"","order":1,"isMenu":true},{"id":"tutorial1md","title":"Build Your First QA System","label1":"tutorials_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"tutorial2md","title":"Fine-tuning a Model on Your Own Data","label1":"tutorials_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"tutorial3md","title":"Build a QA System Without Elasticsearch","label1":"tutorials_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"tutorial4md","title":"Utilizing existing FAQs for Question Answering","label1":"tutorials_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"tutorial5md","title":"Evaluation of a QA System","label1":"tutorials_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"tutorial6md","title":"Better Retrieval via \"Dense Passage Retrieval\"","label1":"tutorials_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"api_haystack","title":"API reference","label1":"","label2":"","label3":"","order":2,"isMenu":true},{"id":"apidatabasemd","title":"Document Store","label1":"api_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"apiretrievermd","title":"Retriever","label1":"api_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"apireadermd","title":"Reader","label1":"api_haystack","label2":"api_haystack","label3":"","order":2,"isMenu":null},{"id":"apiindexingmd","title":"Preprocessor","label1":"api_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"file_convertersmd","title":"File Converters","label1":"api_haystack","label2":"","label3":"","order":5,"isMenu":null}],"absolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/v0.4.0/site/en/menuStructure/menu.json"},{"lang":"en","version":"v0.5.0","menuList":[{"id":"usage_haystack","title":"Usage","label1":"","label2":"","label3":"","order":0,"isMenu":true},{"id":"intromd","title":"What is Haystack","label1":"usage_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"get_startedmd","title":"Get Started","label1":"usage_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"documentstoremd","title":"Document Store","label1":"usage_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"retrievermd","title":"Retriever","label1":"usage_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"readermd","title":"Reader","label1":"usage_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"preprocessingmd","title":"Preprocessing","label1":"usage_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"languagesmd","title":"Languages Other Than English","label1":"usage_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"domain_adaptationmd","title":"Domain Adaptation","label1":"usage_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"termsmd","title":"Glossary","label1":"usage_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"roadmapmd","title":"Roadmap","label1":"usage_haystack","label2":"","label3":"","order":9,"isMenu":null},{"id":"annotationmd","title":"Annotation Tool","label1":"usage_haystack","label2":"","label3":"","order":10,"isMenu":null},{"id":"tutorials_haystack","title":"Tutorials","label1":"","label2":"","label3":"","order":1,"isMenu":true},{"id":"tutorial1md","title":"Build Your First QA System","label1":"tutorials_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"tutorial2md","title":"Fine-tuning a Model on Your Own Data","label1":"tutorials_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"tutorial3md","title":"Build a QA System Without Elasticsearch","label1":"tutorials_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"tutorial4md","title":"Utilizing existing FAQs for Question Answering","label1":"tutorials_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"tutorial5md","title":"Evaluation of a QA System","label1":"tutorials_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"tutorial6md","title":"Better Retrieval via \"Dense Passage Retrieval\"","label1":"tutorials_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"api_haystack","title":"API reference","label1":"","label2":"","label3":"","order":2,"isMenu":true},{"id":"apidatabasemd","title":"Document Store","label1":"api_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"apiretrievermd","title":"Retriever","label1":"api_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"apireadermd","title":"Reader","label1":"api_haystack","label2":"api_haystack","label3":"","order":2,"isMenu":null},{"id":"apiindexingmd","title":"Preprocessor","label1":"api_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"file_convertersmd","title":"File Converters","label1":"api_haystack","label2":"","label3":"","order":5,"isMenu":null}],"absolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/v0.5.0/site/en/menuStructure/menu.json"},{"lang":"en","version":"v0.7.0","menuList":[{"id":"overview","title":"Overview","label1":"","label2":"","label3":"","order":0,"isMenu":true},{"id":"get_startedmd","title":"Get Started","label1":"overview","label2":"","label3":"","order":0,"isMenu":null},{"id":"intromd","title":"What is Haystack?","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"use_casesmd","title":"Use Cases","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"roadmapmd","title":"Roadmap","label1":"overview","label2":"","label3":"","order":2,"isMenu":null},{"id":"termsmd","title":"Glossary","label1":"overview","label2":"","label3":"","order":3,"isMenu":null},{"id":"usage_haystack","title":"Usage","label1":"","label2":"","label3":"","order":1,"isMenu":true},{"id":"preprocessingmd","title":"Preprocessing","label1":"usage_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"documentstoremd","title":"Document Store","label1":"usage_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"retrievermd","title":"Retriever","label1":"usage_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"readermd","title":"Reader","label1":"usage_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"generatormd","title":"Generator","label1":"usage_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"pipelinesmd","title":"Pipelines","label1":"usage_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"languagesmd","title":"Languages Other Than English","label1":"usage_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"domain_adaptationmd","title":"Domain Adaptation","label1":"usage_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"optimizationmd","title":"Optimization","label1":"usage_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"annotationmd","title":"Annotation Tool","label1":"usage_haystack","label2":"","label3":"","order":9,"isMenu":null},{"id":"tutorials_haystack","title":"Tutorials","label1":"","label2":"","label3":"","order":2,"isMenu":true},{"id":"tutorial1md","title":"Build Your First QA System","label1":"tutorials_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"tutorial2md","title":"Fine-tuning a Model on Your Own Data","label1":"tutorials_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"tutorial3md","title":"Build a QA System Without Elasticsearch","label1":"tutorials_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"tutorial4md","title":"Utilizing existing FAQs for Question Answering","label1":"tutorials_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"tutorial5md","title":"Evaluation of a QA System","label1":"tutorials_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"tutorial6md","title":"Better Retrieval via \"Dense Passage Retrieval\"","label1":"tutorials_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"tutorial7md","title":"Generative QA with \"Retrieval-Augmented Generation\"","label1":"tutorials_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"tutorial8md","title":"Preprocessing your Documents","label1":"tutorials_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"tutorial9md","title":"How to Train DPR","label1":"tutorials_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"api_haystack","title":"API reference","label1":"","label2":"","label3":"","order":3,"isMenu":true},{"id":"apidatabasemd","title":"Document Store","label1":"api_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"apiretrievermd","title":"Retriever","label1":"api_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"apireadermd","title":"Reader","label1":"api_haystack","label2":"api_haystack","label3":"","order":2,"isMenu":null},{"id":"apigeneratormd","title":"Generator","label1":"api_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"apiindexingmd","title":"Preprocessor","label1":"api_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"file_convertersmd","title":"File Converters","label1":"api_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"apipipelinesmd","title":"Pipelines","label1":"api_haystack","label2":"","label3":"","order":6,"isMenu":null}],"absolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/v0.7.0/site/en/menuStructure/menu.json"},{"lang":"en","version":"v0.6.0","menuList":[{"id":"overview","title":"Overview","label1":"","label2":"","label3":"","order":0,"isMenu":true},{"id":"get_startedmd","title":"Get Started","label1":"overview","label2":"","label3":"","order":0,"isMenu":null},{"id":"intromd","title":"What is Haystack?","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"use_casesmd","title":"Use Cases","label1":"overview","label2":"","label3":"","order":1,"isMenu":null},{"id":"roadmapmd","title":"Roadmap","label1":"overview","label2":"","label3":"","order":2,"isMenu":null},{"id":"termsmd","title":"Glossary","label1":"overview","label2":"","label3":"","order":3,"isMenu":null},{"id":"usage_haystack","title":"Usage","label1":"","label2":"","label3":"","order":1,"isMenu":true},{"id":"preprocessingmd","title":"Preprocessing","label1":"usage_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"documentstoremd","title":"Document Store","label1":"usage_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"retrievermd","title":"Retriever","label1":"usage_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"readermd","title":"Reader","label1":"usage_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"generatormd","title":"Generator","label1":"usage_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"pipelinesmd","title":"Pipelines","label1":"usage_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"languagesmd","title":"Languages Other Than English","label1":"usage_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"domain_adaptationmd","title":"Domain Adaptation","label1":"usage_haystack","label2":"","label3":"","order":7,"isMenu":null},{"id":"optimizationmd","title":"Optimization","label1":"usage_haystack","label2":"","label3":"","order":8,"isMenu":null},{"id":"annotationmd","title":"Annotation Tool","label1":"usage_haystack","label2":"","label3":"","order":9,"isMenu":null},{"id":"tutorials_haystack","title":"Tutorials","label1":"","label2":"","label3":"","order":2,"isMenu":true},{"id":"tutorial1md","title":"Build Your First QA System","label1":"tutorials_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"tutorial2md","title":"Fine-tuning a Model on Your Own Data","label1":"tutorials_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"tutorial3md","title":"Build a QA System Without Elasticsearch","label1":"tutorials_haystack","label2":"","label3":"","order":2,"isMenu":null},{"id":"tutorial4md","title":"Utilizing existing FAQs for Question Answering","label1":"tutorials_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"tutorial5md","title":"Evaluation of a QA System","label1":"tutorials_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"tutorial6md","title":"Better Retrieval via \"Dense Passage Retrieval\"","label1":"tutorials_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"tutorial7md","title":"Generative QA with \"Retrieval-Augmented Generation\"","label1":"tutorials_haystack","label2":"","label3":"","order":6,"isMenu":null},{"id":"api_haystack","title":"API reference","label1":"","label2":"","label3":"","order":3,"isMenu":true},{"id":"apidatabasemd","title":"Document Store","label1":"api_haystack","label2":"","label3":"","order":0,"isMenu":null},{"id":"apiretrievermd","title":"Retriever","label1":"api_haystack","label2":"","label3":"","order":1,"isMenu":null},{"id":"apireadermd","title":"Reader","label1":"api_haystack","label2":"api_haystack","label3":"","order":2,"isMenu":null},{"id":"apigeneratormd","title":"Generator","label1":"api_haystack","label2":"","label3":"","order":3,"isMenu":null},{"id":"apiindexingmd","title":"Preprocessor","label1":"api_haystack","label2":"","label3":"","order":4,"isMenu":null},{"id":"file_convertersmd","title":"File Converters","label1":"api_haystack","label2":"","label3":"","order":5,"isMenu":null},{"id":"apipipelinesmd","title":"Pipelines","label1":"api_haystack","label2":"","label3":"","order":6,"isMenu":null}],"absolutePath":"/home/runner/work/haystack-website/haystack-website/src/pages/docs/versions/master/v0.6.0/site/en/menuStructure/menu.json"}],"newHtml":"<h1 id=\"Retriever\" style=\"position:relative;\">Retriever<a href=\"#Retriever\" aria-label=\"Retriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><a name=\"base\"></a></p>\n<h1 id=\"Module-base\" style=\"position:relative;\">Module: base<a href=\"#Module-base\" aria-label=\"Module base permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><a name=\"base.BaseRetriever\"></a></p>\n<h2 id=\"Class-BaseRetriever\" style=\"position:relative;\">Class: BaseRetriever<a href=\"#Class-BaseRetriever\" aria-label=\"Class BaseRetriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code class=\"language-python\">class BaseRetriever(ABC)\n</code></pre>\n<p><a name=\"base.BaseRetriever.retrieve\"></a></p>\n<h4 id=\"retrieve\" style=\"position:relative;\">retrieve<a href=\"#retrieve\" aria-label=\"retrieve permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | @abstractmethod\n | retrieve(query: str, filters: dict = None, top_k: int = 10, index: str = None) -> List[Document]\n</code></pre>\n<p>Scan through documents in DocumentStore and return a small number documents\nthat are most relevant to the query.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>query</code>: The query</li>\n<li><code>filters</code>: A dictionary where the keys specify a metadata field and the value is a list of accepted values for that field</li>\n<li><code>top_k</code>: How many documents to return per query.</li>\n<li><code>index</code>: The name of the index in the DocumentStore from which to retrieve documents</li>\n</ul>\n<p><a name=\"base.BaseRetriever.timing\"></a></p>\n<h4 id=\"timing\" style=\"position:relative;\">timing<a href=\"#timing\" aria-label=\"timing permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | timing(fn)\n</code></pre>\n<p>Wrapper method used to time functions.</p>\n<p><a name=\"base.BaseRetriever.eval\"></a></p>\n<h4 id=\"eval\" style=\"position:relative;\">eval<a href=\"#eval\" aria-label=\"eval permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | eval(label_index: str = \"label\", doc_index: str = \"eval_document\", label_origin: str = \"gold_label\", top_k: int = 10, open_domain: bool = False, return_preds: bool = False) -> dict\n</code></pre>\n<p>Performs evaluation on the Retriever.\nRetriever is evaluated based on whether it finds the correct document given the query string and at which\nposition in the ranking of documents the correct document is.</p>\n<p>|  Returns a dict containing the following metrics:</p>\n<ul>\n<li>\"recall\": Proportion of questions for which correct document is among retrieved documents</li>\n<li>\"mrr\": Mean of reciprocal rank. Rewards retrievers that give relevant documents a higher rank.\nOnly considers the highest ranked relevant document.</li>\n<li>\"map\": Mean of average precision for each question. Rewards retrievers that give relevant\ndocuments a higher rank. Considers all retrieved relevant documents. If <code>open_domain=True</code>,\naverage precision is normalized by the number of retrieved relevant documents per query.\nIf <code>open_domain=False</code>, average precision is normalized by the number of all relevant documents\nper query.</li>\n</ul>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>label_index</code>: Index/Table in DocumentStore where labeled questions are stored</li>\n<li><code>doc_index</code>: Index/Table in DocumentStore where documents that are used for evaluation are stored</li>\n<li><code>top_k</code>: How many documents to return per query</li>\n<li><code>open_domain</code>: If <code>True</code>, retrieval will be evaluated by checking if the answer string to a question is\ncontained in the retrieved docs (common approach in open-domain QA).\nIf <code>False</code>, retrieval uses a stricter evaluation that checks if the retrieved document ids\nare within ids explicitly stated in the labels.</li>\n<li><code>return_preds</code>: Whether to add predictions in the returned dictionary. If True, the returned dictionary\ncontains the keys \"predictions\" and \"metrics\".</li>\n</ul>\n<p><a name=\"sparse\"></a></p>\n<h1 id=\"Module-sparse\" style=\"position:relative;\">Module: sparse<a href=\"#Module-sparse\" aria-label=\"Module sparse permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><a name=\"sparse.ElasticsearchRetriever\"></a></p>\n<h2 id=\"Class-ElasticsearchRetriever\" style=\"position:relative;\">Class: ElasticsearchRetriever<a href=\"#Class-ElasticsearchRetriever\" aria-label=\"Class ElasticsearchRetriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code class=\"language-python\">class ElasticsearchRetriever(BaseRetriever)\n</code></pre>\n<p><a name=\"sparse.ElasticsearchRetriever.__init__\"></a></p>\n<h4 id=\"__init__\" style=\"position:relative;\">__init__<a href=\"#__init__\" aria-label=\"__init__ permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | __init__(document_store: ElasticsearchDocumentStore, custom_query: str = None)\n</code></pre>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>document_store</code>: an instance of a DocumentStore to retrieve documents from.</li>\n<li><code>custom_query</code>: query string as per Elasticsearch DSL with a mandatory query placeholder(query).</li>\n</ul>\n<p>Optionally, ES <code>filter</code> clause can be added where the values of <code>terms</code> are placeholders\nthat get substituted during runtime. The placeholder(${filter<em>name</em>1}, ${filter<em>name</em>2}..)\nnames must match with the filters dict supplied in self.retrieve().\n::</p>\n<p><strong>An example custom_query:</strong></p>\n<pre><code class=\"language-python\">|    {\n|        \"size\": 10,\n|        \"query\": {\n|            \"bool\": {\n|                \"should\": [{\"multi_match\": {\n|                    \"query\": \"${query}\",                 // mandatory query placeholder\n|                    \"type\": \"most_fields\",\n|                    \"fields\": [\"text\", \"title\"]}}],\n|                \"filter\": [                                 // optional custom filters\n|                    {\"terms\": {\"year\": \"${years}\"}},\n|                    {\"terms\": {\"quarter\": \"${quarters}\"}},\n|                    {\"range\": {\"date\": {\"gte\": \"${date}\"}}}\n|                    ],\n|            }\n|        },\n|    }\n</code></pre>\n<p><strong>For this custom_query, a sample retrieve() could be:</strong></p>\n<pre><code class=\"language-python\">|    self.retrieve(query=\"Why did the revenue increase?\",\n|                  filters={\"years\": [\"2019\"], \"quarters\": [\"Q1\", \"Q2\"]})\n</code></pre>\n<p><a name=\"sparse.ElasticsearchRetriever.retrieve\"></a></p>\n<h4 id=\"retrieve-1\" style=\"position:relative;\">retrieve<a href=\"#retrieve-1\" aria-label=\"retrieve 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | retrieve(query: str, filters: dict = None, top_k: int = 10, index: str = None) -> List[Document]\n</code></pre>\n<p>Scan through documents in DocumentStore and return a small number documents\nthat are most relevant to the query.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>query</code>: The query</li>\n<li><code>filters</code>: A dictionary where the keys specify a metadata field and the value is a list of accepted values for that field</li>\n<li><code>top_k</code>: How many documents to return per query.</li>\n<li><code>index</code>: The name of the index in the DocumentStore from which to retrieve documents</li>\n</ul>\n<p><a name=\"sparse.ElasticsearchFilterOnlyRetriever\"></a></p>\n<h2 id=\"Class-ElasticsearchFilterOnlyRetriever\" style=\"position:relative;\">Class: ElasticsearchFilterOnlyRetriever<a href=\"#Class-ElasticsearchFilterOnlyRetriever\" aria-label=\"Class ElasticsearchFilterOnlyRetriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code class=\"language-python\">class ElasticsearchFilterOnlyRetriever(ElasticsearchRetriever)\n</code></pre>\n<p>Naive \"Retriever\" that returns all documents that match the given filters. No impact of query at all.\nHelpful for benchmarking, testing and if you want to do QA on small documents without an \"active\" retriever.</p>\n<p><a name=\"sparse.ElasticsearchFilterOnlyRetriever.retrieve\"></a></p>\n<h4 id=\"retrieve-2\" style=\"position:relative;\">retrieve<a href=\"#retrieve-2\" aria-label=\"retrieve 2 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | retrieve(query: str, filters: dict = None, top_k: int = 10, index: str = None) -> List[Document]\n</code></pre>\n<p>Scan through documents in DocumentStore and return a small number documents\nthat are most relevant to the query.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>query</code>: The query</li>\n<li><code>filters</code>: A dictionary where the keys specify a metadata field and the value is a list of accepted values for that field</li>\n<li><code>top_k</code>: How many documents to return per query.</li>\n<li><code>index</code>: The name of the index in the DocumentStore from which to retrieve documents</li>\n</ul>\n<p><a name=\"sparse.TfidfRetriever\"></a></p>\n<h2 id=\"Class-TfidfRetriever\" style=\"position:relative;\">Class: TfidfRetriever<a href=\"#Class-TfidfRetriever\" aria-label=\"Class TfidfRetriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code class=\"language-python\">class TfidfRetriever(BaseRetriever)\n</code></pre>\n<p>Read all documents from a SQL backend.</p>\n<p>Split documents into smaller units (eg, paragraphs or pages) to reduce the\ncomputations when text is passed on to a Reader for QA.</p>\n<p>It uses sklearn's TfidfVectorizer to compute a tf-idf matrix.</p>\n<p><a name=\"sparse.TfidfRetriever.retrieve\"></a></p>\n<h4 id=\"retrieve-3\" style=\"position:relative;\">retrieve<a href=\"#retrieve-3\" aria-label=\"retrieve 3 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | retrieve(query: str, filters: dict = None, top_k: int = 10, index: str = None) -> List[Document]\n</code></pre>\n<p>Scan through documents in DocumentStore and return a small number documents\nthat are most relevant to the query.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>query</code>: The query</li>\n<li><code>filters</code>: A dictionary where the keys specify a metadata field and the value is a list of accepted values for that field</li>\n<li><code>top_k</code>: How many documents to return per query.</li>\n<li><code>index</code>: The name of the index in the DocumentStore from which to retrieve documents</li>\n</ul>\n<p><a name=\"sparse.TfidfRetriever.fit\"></a></p>\n<h4 id=\"fit\" style=\"position:relative;\">fit<a href=\"#fit\" aria-label=\"fit permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | fit()\n</code></pre>\n<p>Performing training on this class according to the TF-IDF algorithm.</p>\n<p><a name=\"dense\"></a></p>\n<h1 id=\"Module-dense\" style=\"position:relative;\">Module: dense<a href=\"#Module-dense\" aria-label=\"Module dense permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><a name=\"dense.DensePassageRetriever\"></a></p>\n<h2 id=\"Class-DensePassageRetriever\" style=\"position:relative;\">Class: DensePassageRetriever<a href=\"#Class-DensePassageRetriever\" aria-label=\"Class DensePassageRetriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code class=\"language-python\">class DensePassageRetriever(BaseRetriever)\n</code></pre>\n<p>Retriever that uses a bi-encoder (one transformer for query, one transformer for passage).\nSee the original paper for more details:\nKarpukhin, Vladimir, et al. (2020): \"Dense Passage Retrieval for Open-Domain Question Answering.\"\n(<a href=\"https://arxiv.org/abs/2004.04906\">https://arxiv.org/abs/2004.04906</a>).</p>\n<p><a name=\"dense.DensePassageRetriever.__init__\"></a></p>\n<h4 id=\"__init__-1\" style=\"position:relative;\">__init__<a href=\"#__init__-1\" aria-label=\"__init__ 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | __init__(document_store: BaseDocumentStore, query_embedding_model: Union[Path, str] = \"facebook/dpr-question_encoder-single-nq-base\", passage_embedding_model: Union[Path, str] = \"facebook/dpr-ctx_encoder-single-nq-base\", max_seq_len_query: int = 64, max_seq_len_passage: int = 256, use_gpu: bool = True, batch_size: int = 16, embed_title: bool = True, use_fast_tokenizers: bool = True, similarity_function: str = \"dot_product\")\n</code></pre>\n<p>Init the Retriever incl. the two encoder models from a local or remote model checkpoint.\nThe checkpoint format matches huggingface transformers' model format</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-python\">|    # remote model from FAIR\n|    DensePassageRetriever(document_store=your_doc_store,\n|                          query_embedding_model=\"facebook/dpr-question_encoder-single-nq-base\",\n|                          passage_embedding_model=\"facebook/dpr-ctx_encoder-single-nq-base\")\n|    # or from local path\n|    DensePassageRetriever(document_store=your_doc_store,\n|                          query_embedding_model=\"model_directory/question-encoder\",\n|                          passage_embedding_model=\"model_directory/context-encoder\")\n</code></pre>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>document_store</code>: An instance of DocumentStore from which to retrieve documents.</li>\n<li><code>query_embedding_model</code>: Local path or remote name of question encoder checkpoint. The format equals the\none used by hugging-face transformers' modelhub models\nCurrently available remote names: <code>\"facebook/dpr-question_encoder-single-nq-base\"</code></li>\n<li><code>passage_embedding_model</code>: Local path or remote name of passage encoder checkpoint. The format equals the\none used by hugging-face transformers' modelhub models\nCurrently available remote names: <code>\"facebook/dpr-ctx_encoder-single-nq-base\"</code></li>\n<li><code>max_seq_len_query</code>: Longest length of each query sequence. Maximum number of tokens for the query text. Longer ones will be cut down.\"</li>\n<li><code>max_seq_len_passage</code>: Longest length of each passage/context sequence. Maximum number of tokens for the passage text. Longer ones will be cut down.\"</li>\n<li><code>use_gpu</code>: Whether to use gpu or not</li>\n<li><code>batch_size</code>: Number of questions or passages to encode at once</li>\n<li><code>embed_title</code>: Whether to concatenate title and passage to a text pair that is then used to create the embedding.\nThis is the approach used in the original paper and is likely to improve performance if your\ntitles contain meaningful information for retrieval (topic, entities etc.) .\nThe title is expected to be present in doc.meta[\"name\"] and can be supplied in the documents\nbefore writing them to the DocumentStore like this:\n{\"text\": \"my text\", \"meta\": {\"name\": \"my title\"}}.</li>\n</ul>\n<p><a name=\"dense.DensePassageRetriever.retrieve\"></a></p>\n<h4 id=\"retrieve-4\" style=\"position:relative;\">retrieve<a href=\"#retrieve-4\" aria-label=\"retrieve 4 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | retrieve(query: str, filters: dict = None, top_k: int = 10, index: str = None) -> List[Document]\n</code></pre>\n<p>Scan through documents in DocumentStore and return a small number documents\nthat are most relevant to the query.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>query</code>: The query</li>\n<li><code>filters</code>: A dictionary where the keys specify a metadata field and the value is a list of accepted values for that field</li>\n<li><code>top_k</code>: How many documents to return per query.</li>\n<li><code>index</code>: The name of the index in the DocumentStore from which to retrieve documents</li>\n</ul>\n<p><a name=\"dense.DensePassageRetriever.embed_queries\"></a></p>\n<h4 id=\"embed_queries\" style=\"position:relative;\">embed_queries<a href=\"#embed_queries\" aria-label=\"embed_queries permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | embed_queries(texts: List[str]) -> List[np.array]\n</code></pre>\n<p>Create embeddings for a list of queries using the query encoder</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>texts</code>: Queries to embed</li>\n</ul>\n<p><strong>Returns</strong>:</p>\n<p>Embeddings, one per input queries</p>\n<p><a name=\"dense.DensePassageRetriever.embed_passages\"></a></p>\n<h4 id=\"embed_passages\" style=\"position:relative;\">embed_passages<a href=\"#embed_passages\" aria-label=\"embed_passages permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | embed_passages(docs: List[Document]) -> List[np.array]\n</code></pre>\n<p>Create embeddings for a list of passages using the passage encoder</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>docs</code>: List of Document objects used to represent documents / passages in a standardized way within Haystack.</li>\n</ul>\n<p><strong>Returns</strong>:</p>\n<p>Embeddings of documents / passages shape (batch<em>size, embedding</em>dim)</p>\n<p><a name=\"dense.DensePassageRetriever.train\"></a></p>\n<h4 id=\"train\" style=\"position:relative;\">train<a href=\"#train\" aria-label=\"train permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | train(data_dir: str, train_filename: str, dev_filename: str = None, test_filename: str = None, batch_size: int = 2, embed_title: bool = True, num_hard_negatives: int = 1, num_positives: int = 1, n_epochs: int = 3, evaluate_every: int = 1000, n_gpu: int = 1, learning_rate: float = 1e-5, epsilon: float = 1e-08, weight_decay: float = 0.0, num_warmup_steps: int = 100, grad_acc_steps: int = 1, optimizer_name: str = \"TransformersAdamW\", optimizer_correct_bias: bool = True, save_dir: str = \"../saved_models/dpr\", query_encoder_save_dir: str = \"query_encoder\", passage_encoder_save_dir: str = \"passage_encoder\")\n</code></pre>\n<p>train a DensePassageRetrieval model</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>data_dir</code>: Directory where training file, dev file and test file are present</li>\n<li><code>train_filename</code>: training filename</li>\n<li><code>dev_filename</code>: development set filename, file to be used by model in eval step of training</li>\n<li><code>test_filename</code>: test set filename, file to be used by model in test step after training</li>\n<li><code>batch_size</code>: total number of samples in 1 batch of data</li>\n<li><code>embed_title</code>: whether to concatenate passage title with each passage. The default setting in official DPR embeds passage title with the corresponding passage</li>\n<li><code>num_hard_negatives</code>: number of hard negative passages(passages which are very similar(high score by BM25) to query but do not contain the answer</li>\n<li><code>num_positives</code>: number of positive passages</li>\n<li><code>n_epochs</code>: number of epochs to train the model on</li>\n<li><code>evaluate_every</code>: number of training steps after evaluation is run</li>\n<li><code>n_gpu</code>: number of gpus to train on</li>\n<li><code>learning_rate</code>: learning rate of optimizer</li>\n<li><code>epsilon</code>: epsilon parameter of optimizer</li>\n<li><code>weight_decay</code>: weight decay parameter of optimizer</li>\n<li><code>grad_acc_steps</code>: number of steps to accumulate gradient over before back-propagation is done</li>\n<li><code>optimizer_name</code>: what optimizer to use (default: TransformersAdamW)</li>\n<li><code>num_warmup_steps</code>: number of warmup steps</li>\n<li><code>optimizer_correct_bias</code>: Whether to correct bias in optimizer</li>\n<li><code>save_dir</code>: directory where models are saved</li>\n<li><code>query_encoder_save_dir</code>: directory inside save<em>dir where query</em>encoder model files are saved</li>\n<li><code>passage_encoder_save_dir</code>: directory inside save<em>dir where passage</em>encoder model files are saved</li>\n</ul>\n<p><a name=\"dense.DensePassageRetriever.save\"></a></p>\n<h4 id=\"save\" style=\"position:relative;\">save<a href=\"#save\" aria-label=\"save permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | save(save_dir: Union[Path, str], query_encoder_dir: str = \"query_encoder\", passage_encoder_dir: str = \"passage_encoder\")\n</code></pre>\n<p>Save DensePassageRetriever to the specified directory.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>save_dir</code>: Directory to save to.</li>\n<li><code>query_encoder_dir</code>: Directory in save_dir that contains query encoder model.</li>\n<li><code>passage_encoder_dir</code>: Directory in save_dir that contains passage encoder model.</li>\n</ul>\n<p><strong>Returns</strong>:</p>\n<p>None</p>\n<p><a name=\"dense.DensePassageRetriever.load\"></a></p>\n<h4 id=\"load\" style=\"position:relative;\">load<a href=\"#load\" aria-label=\"load permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | @classmethod\n | load(cls, load_dir: Union[Path, str], document_store: BaseDocumentStore, max_seq_len_query: int = 64, max_seq_len_passage: int = 256, use_gpu: bool = True, batch_size: int = 16, embed_title: bool = True, use_fast_tokenizers: bool = True, similarity_function: str = \"dot_product\", query_encoder_dir: str = \"query_encoder\", passage_encoder_dir: str = \"passage_encoder\")\n</code></pre>\n<p>Load DensePassageRetriever from the specified directory.</p>\n<p><a name=\"dense.EmbeddingRetriever\"></a></p>\n<h2 id=\"Class-EmbeddingRetriever\" style=\"position:relative;\">Class: EmbeddingRetriever<a href=\"#Class-EmbeddingRetriever\" aria-label=\"Class EmbeddingRetriever permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code class=\"language-python\">class EmbeddingRetriever(BaseRetriever)\n</code></pre>\n<p><a name=\"dense.EmbeddingRetriever.__init__\"></a></p>\n<h4 id=\"__init__-2\" style=\"position:relative;\">__init__<a href=\"#__init__-2\" aria-label=\"__init__ 2 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | __init__(document_store: BaseDocumentStore, embedding_model: str, use_gpu: bool = True, model_format: str = \"farm\", pooling_strategy: str = \"reduce_mean\", emb_extraction_layer: int = -1)\n</code></pre>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>document_store</code>: An instance of DocumentStore from which to retrieve documents.</li>\n<li><code>embedding_model</code>: Local path or name of model in Hugging Face's model hub such as <code>'deepset/sentence_bert'</code></li>\n<li><code>use_gpu</code>: Whether to use gpu or not</li>\n<li><code>model_format</code>: Name of framework that was used for saving the model. Options:</li>\n<li><code>'farm'</code></li>\n<li><code>'transformers'</code></li>\n<li><code>'sentence_transformers'</code></li>\n<li><code>pooling_strategy</code>: Strategy for combining the embeddings from the model (for farm / transformers models only).\nOptions:</li>\n<li><code>'cls_token'</code> (sentence vector)</li>\n<li><code>'reduce_mean'</code> (sentence vector)</li>\n<li><code>'reduce_max'</code> (sentence vector)</li>\n<li><code>'per_token'</code> (individual token vectors)</li>\n<li><code>emb_extraction_layer</code>: Number of layer from which the embeddings shall be extracted (for farm / transformers models only).\nDefault: -1 (very last layer).</li>\n</ul>\n<p><a name=\"dense.EmbeddingRetriever.retrieve\"></a></p>\n<h4 id=\"retrieve-5\" style=\"position:relative;\">retrieve<a href=\"#retrieve-5\" aria-label=\"retrieve 5 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | retrieve(query: str, filters: dict = None, top_k: int = 10, index: str = None) -> List[Document]\n</code></pre>\n<p>Scan through documents in DocumentStore and return a small number documents\nthat are most relevant to the query.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>query</code>: The query</li>\n<li><code>filters</code>: A dictionary where the keys specify a metadata field and the value is a list of accepted values for that field</li>\n<li><code>top_k</code>: How many documents to return per query.</li>\n<li><code>index</code>: The name of the index in the DocumentStore from which to retrieve documents</li>\n</ul>\n<p><a name=\"dense.EmbeddingRetriever.embed\"></a></p>\n<h4 id=\"embed\" style=\"position:relative;\">embed<a href=\"#embed\" aria-label=\"embed permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | embed(texts: Union[List[str], str]) -> List[np.array]\n</code></pre>\n<p>Create embeddings for each text in a list of texts using the retrievers model (<code>self.embedding_model</code>)</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>texts</code>: Texts to embed</li>\n</ul>\n<p><strong>Returns</strong>:</p>\n<p>List of embeddings (one per input text). Each embedding is a list of floats.</p>\n<p><a name=\"dense.EmbeddingRetriever.embed_queries\"></a></p>\n<h4 id=\"embed_queries-1\" style=\"position:relative;\">embed_queries<a href=\"#embed_queries-1\" aria-label=\"embed_queries 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | embed_queries(texts: List[str]) -> List[np.array]\n</code></pre>\n<p>Create embeddings for a list of queries. For this Retriever type: The same as calling .embed()</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>texts</code>: Queries to embed</li>\n</ul>\n<p><strong>Returns</strong>:</p>\n<p>Embeddings, one per input queries</p>\n<p><a name=\"dense.EmbeddingRetriever.embed_passages\"></a></p>\n<h4 id=\"embed_passages-1\" style=\"position:relative;\">embed_passages<a href=\"#embed_passages-1\" aria-label=\"embed_passages 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<pre><code class=\"language-python\"> | embed_passages(docs: List[Document]) -> List[np.array]\n</code></pre>\n<p>Create embeddings for a list of passages. For this Retriever type: The same as calling .embed()</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>docs</code>: List of documents to embed</li>\n</ul>\n<p><strong>Returns</strong>:</p>\n<p>Embeddings, one per input passage</p>"}},"staticQueryHashes":["3895693482"]}