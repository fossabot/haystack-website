{"version":3,"sources":["webpack:///./src/images/haystack_logo_blue_banner.png","webpack:///./src/pages/community/join.js"],"names":["module","exports","BetaPage","useState","email","setEmail","github","setGithub","twitter","setTwitter","company","setCompany","fname","setFName","lname","setLName","consentToProcess","setConsentToProcess","communications","setCommunications","React","success","setSuccess","message","setMessage","severity","setSeverity","handleClose","event","reason","title","pathname","image","Logo","className","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","src","OpenSource","alt","onSubmit","preventDefault","xhr","XMLHttpRequest","data","Date","getTime","final_data","JSON","stringify","setRequestHeader","onreadystatechange","readyState","status","send","window","variant","required","htmlFor","id","value","onChange","target","control","checked","name","label","type"],"mappings":"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","file":"component---src-pages-community-join-js-f66bb3c6e7e2434d5bb0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/haystack_logo_blue_banner-b76f873c277c22ec3d3d69efd28c70c1.png\";","import React, { useState } from 'react';\nimport Layout from '../../components/layout/layout';\nimport './join.scss';\nimport SEO from \"../../components/seo\";\nimport Logo from \"../../images/haystack_logo_blue_banner_social.png\"\n\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Button from \"../../components/landing-page/button\";\n\nimport OpenSource from \"../../images/haystack_logo_blue_banner.png\"\nimport { navigate } from \"gatsby\"\n\nconst BetaPage = () => {\n\n  const [email, setEmail] = useState('');\n  const [github, setGithub] = useState('');\n  const [twitter, setTwitter] = useState('');\n  const [company, setCompany] = useState('');\n  const [fname, setFName] = useState('');\n  const [lname, setLName] = useState('');\n  const [consentToProcess, setConsentToProcess] = useState(false);\n  const [communications, setCommunications] = useState(true);\n  const [success, setSuccess] = React.useState(false);\n  const [message, setMessage] = React.useState(\"Thank you for joining our community!\");\n  const [severity, setSeverity] = React.useState(\"success\");\n  const vertical='top'; \n  const horizontal='center';\n\n  const handleSubmit = (event) =>  {\n    event.preventDefault();\n\n    // Hubspot integration\n    // Create the new request \n    var xhr = new XMLHttpRequest();\n    var url = 'https://api.hsforms.com/submissions/v3/integration/submit/4561480/28f3118d-1c2b-4a93-9c8f-f11e4454f1ac';\n    \n    // JSON:\n    var data = {\n      \"submittedAt\": new Date().getTime(),\n      \"fields\": [\n        {\n          \"name\": \"email\",\n          \"value\": email\n        },\n        {\n          \"name\": \"github\",\n          \"value\": github\n        },\n        {\n          \"name\": \"twitter\",\n          \"value\": twitter\n        },\n        {\n          \"name\": \"company\",\n          \"value\": company\n        },\n        {\n          \"name\": \"firstname\",\n          \"value\": fname\n        },\n        {\n          \"name\": \"lastname\",\n          \"value\": lname\n        }\n      ],\n      \"context\": {\n        \"pageUri\": \"haystack.deepset.ai\",\n        \"pageName\": \"Haystack Hub\"\n      },\n      \"legalConsentOptions\":{ // Include this object when GDPR options are enabled\n        \"consent\":{\n          \"consentToProcess\":consentToProcess,\n          \"text\":\"I agree to allow deepset GmbH to store and process my personal data.\",\n          \"communications\":[\n            {\n              \"value\":communications,\n              \"subscriptionTypeId\":999,\n              \"text\":\"I agree to receive marketing communications from deepset GmbH.\"\n            }\n          ]\n        }\n      }\n    };\n\n    var final_data = JSON.stringify(data);\n\n    xhr.open('POST', url);\n    // Sets the value of the 'Content-Type' HTTP request headers to 'application/json'\n    xhr.setRequestHeader('Content-Type', 'application/json');\n\n    xhr.onreadystatechange = function() {\n        if(xhr.readyState === 4 && xhr.status === 200) { \n          setMessage(\"Thank you for joining our community!\");\n          setSeverity(\"success\");\n          setSuccess(true);// Returns a 200 response if the submission is successful.\n\n          // Send invite\n          // Create the new request \n          //var xhrInvite = new XMLHttpRequest();\n          //var urlInvite = 'https://p3e3737mri.execute-api.eu-central-1.amazonaws.com/default/haystack-slack-invite';\n          //var dataInvite = {email: email};\n          //var final_dataInvite = JSON.stringify(dataInvite);\n\n          //xhrInvite.open('POST', urlInvite);\n\n          //xhrInvite.onreadystatechange = function() {\n            //console.log(xhrInvite);\n          //}\n\n          // Sends the request \n          //xhrInvite.send(final_dataInvite);\n        } else if (xhr.readyState === 4 && xhr.status === 400){ \n          setMessage(\"An error occurred. Please check your details.\");\n          setSeverity(\"error\");\n          setSuccess(true);// Returns Error         \n        } else if (xhr.readyState === 4 && xhr.status === 403){ \n          setMessage(\"An error occurred. Please check your details.\");\n          setSeverity(\"error\");\n          setSuccess(true);// Returns Error                   \n        } else if (xhr.readyState === 4 && xhr.status === 404){ \n          setMessage(\"An error occurred. Please check your details.\");\n          setSeverity(\"error\");\n          setSuccess(true);// Returns Error             \n        } else {\n          setMessage(\"An error occurred. Please check your details.\");\n          setSeverity(\"error\");\n          setSuccess(true);// Returns Error  \n        }\n      }\n\n      // Sends the request \n      xhr.send(final_data);\n      window.open(\n        'https://join.slack.com/t/haystack-community/shared_invite/zt-n9pgt0w1-J7YB_FM4dFeubQI2t6WD8w',\n        '_blank'\n      );\n\n  };\n\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n   \n  const handleChangeGithub = (event) => {\n    setGithub(event.target.value);\n  };\n\n  const handleChangeTwitter = (event) => {\n    setTwitter(event.target.value);\n  };\n\n  const handleChangeCompany = (event) => {\n    setCompany(event.target.value);\n  };\n\n  const handleChangeFName = (event) => {\n    setFName(event.target.value);\n  };\n\n  const handleChangeLName = (event) => {\n    setLName(event.target.value);\n  };\n\n  const handleChangeConsentToProcess = (event) => {\n    setConsentToProcess(event.target.checked);\n  };\n\n  const handleCommunication = (event) => {\n    setCommunications(event.target.checked);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n\n\n  return (\n      <Layout>\n        <SEO title=\"Haystack Community\" pathname=\"/community/join\" image={Logo} />\n        <section className=\"contact\">\n            <Snackbar open={success} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{vertical, horizontal}} >\n            <Alert onClose={handleClose} severity={severity}>\n            {message}\n            </Alert>\n            </Snackbar>\n\n            <div className=\"community-signup\">\n            <img className=\"product-img haystackos-img\" src={OpenSource} alt=\"Haystack Open Source\"></img>\n            <h2>Join the Haystack Community on Slack</h2>\n            <p>Learn more about what people are building with Haystack, ask questions, share knowledge, track events, meet collaborators.</p>\n            <div className=\"beta-form\">\n                    <form onSubmit={handleSubmit}>\n                        <div>\n                        <div>\n                        <FormControl className=\"form-control\" variant=\"filled\">\n                        <InputLabel required htmlFor=\"fname\">First Name</InputLabel>\n                        <Input required id=\"fname\" value={fname} onChange={handleChangeFName} />\n                        </FormControl>\n                        </div>\n                        <div>\n                        <FormControl className=\"form-control\" variant=\"filled\">\n                        <InputLabel required htmlFor=\"lname\">Last Name</InputLabel>\n                        <Input required id=\"lname\" value={lname} onChange={handleChangeLName} />\n                        </FormControl>\n                        </div>\n                        <div>\n                        <FormControl className=\"form-control\" variant=\"filled\">\n                        <InputLabel required htmlFor=\"email\">Email address</InputLabel>\n                        <Input required id=\"email\" value={email} onChange={handleChangeEmail} />\n                        </FormControl>\n                        </div>\n                        <div>\n                        <FormControl className=\"form-control\" variant=\"filled\">\n                        <InputLabel htmlFor=\"company\">Company/ Organization</InputLabel>\n                        <Input id=\"company\" value={company} onChange={handleChangeCompany} />\n                        </FormControl>\n                        </div>\n                        <div>\n                        <FormControl className=\"form-control\" variant=\"filled\">\n                        <InputLabel htmlFor=\"github\">GitHub username</InputLabel>\n                        <Input id=\"github\" value={github} onChange={handleChangeGithub} />\n                        </FormControl>\n                        </div>\n                        <div>\n                        <FormControl className=\"form-control\" variant=\"filled\">\n                        <InputLabel htmlFor=\"twitter\">Twitter handle</InputLabel>\n                        <Input id=\"twitter\" value={twitter} onChange={handleChangeTwitter} />\n                        </FormControl>\n                        </div>\n                        <div>\n                        <FormControlLabel className=\"form-checkbox\"\n                        control={<Checkbox required checked={consentToProcess} onChange={handleChangeConsentToProcess} name=\"consentToProcess\" />}\n                        label=\"I agree to allow deepset GmbH to store and process my personal data.*\"\n                        />\n                        </div>\n                        <div>\n                        <FormControlLabel className=\"form-checkbox\"\n                        control={<Checkbox checked={communications} onChange={handleCommunication} name=\"communications\" />}\n                        label=\"I agree to receive information, product updates and commercial offers from deepset GmbH.\"\n                        />\n                        </div>\n                        </div>                    \n                    <div>\n                    <Button\n                            type=\"submit\"\n                            className=\"signup-beta\"\n                            label=\"Join the Haystack Community on Slack\"\n                        >\n                    </Button>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        </section>\n      </Layout>\n  );\n\n};\n  \n\nexport default BetaPage"],"sourceRoot":""}